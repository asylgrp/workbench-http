parameters:
    env(WORKB_ORG_NAME): "Unknown organization"
    env(WORKB_BASE_DIR): "."
    env(WORKB_DSN): "data"
    env(WORKB_ACCESS_LOG): "access-log.txt"
    env(WORKB_ACCESS_FORMAT): '%h %u %t %T "%r" %>s %b'
    env(WORKB_EVENT_LOG): "event-log.txt"
    env(WORKB_LOG_LEVEL): "notice"

imports:
    - { resource: event_dispatcher.yaml }
    - { resource: service_layer.yaml }

services:
    _defaults:
        public: false
        autowire: true

    workbench\webb\:
        resource: '../src/*'
        exclude:
            - '../src/DependencyInjection/ProjectServiceContainer.php'
            - '../src/Event'

    workbench\webb\Http\Route\:
        resource: '../src/Http/Route/*'
        public: true

    Psr\Http\Server\RequestHandlerInterface:
        class: inroutephp\inroute\Runtime\Middleware\Pipeline
        public: true
        arguments:
            - '@workbench\webb\Http\Middleware\ExceptionEndpoint'
            - '@workbench\webb\Http\Middleware\ExceptionPrettifier'
            - '@workbench\webb\Http\Middleware\ExceptionLogger'
            - '@workbench\webb\Http\Middleware\Committer'
            - '@Middlewares\AccessLog'
            - '@Middlewares\TrailingSlash'
            - '@Middlewares\Robots'
            - '@workbench\webb\Http\HttpRouter'

    workbench\webb\Http\Middleware\ExceptionLogger:
        class: ~
        arguments: ['@event_logger']

    event_logger:
        class: Monolog\Logger
        arguments: ['event']
        calls:
            - method: pushHandler
              arguments: ['@event_logger_stream']

    event_logger_stream:
        class: Monolog\Handler\StreamHandler
        arguments: ['%env(WORKB_BASE_DIR)%/%env(WORKB_EVENT_LOG)%', '%env(WORKB_LOG_LEVEL)%']

    Middlewares\AccessLog:
        class: ~
        arguments: ['@access_logger']
        calls:
            - method: format
              arguments: ['%env(WORKB_ACCESS_FORMAT)%']

    access_logger:
        class: Monolog\Logger
        arguments: ['access']
        calls:
            - method: pushHandler
              arguments: ['@access_logger_stream']

    access_logger_stream:
        class: Monolog\Handler\StreamHandler
        arguments: ['%env(WORKB_BASE_DIR)%/%env(WORKB_ACCESS_LOG)%']

    Middlewares\TrailingSlash: ~

    Middlewares\Robots:
        class: ~
        arguments: [false]

    workbench\webb\Http\HttpRouter:
        class: ~
        calls:
            - method: setContainer
              arguments: ['@Psr\Container\ContainerInterface']

    Psr\Container\ContainerInterface:
        synthetic: true
        public: true

    Psr\Http\Message\ResponseFactoryInterface:
        class: Zend\Diactoros\ResponseFactory
        public: true

    workbench\webb\Storage\Yayson\YaysondbFactory:
        class: ~
        arguments: ['%env(WORKB_BASE_DIR)%/%env(WORKB_DSN)%']

    workbench\webb\Storage\ContactPersonRepositoryInterface:
        class: workbench\webb\Storage\Yayson\YaysonContactPersonRepository
        factory: ['@workbench\webb\Storage\Yayson\YaysondbFactory', createContactPersonRepository]

    workbench\webb\Storage\TransactionHandlerInterface:
        class: workbench\webb\Storage\Yayson\YaysonTransactionHandler
        factory: ['@workbench\webb\Storage\Yayson\YaysondbFactory', createTransactionHandler]

    asylgrp\decisionmaker\Normalizer\ContactPersonNormalizer:
        class: ~
        arguments: ['@byrokrat\banking\AccountFactoryInterface']

    byrokrat\banking\AccountFactoryInterface:
        class: byrokrat\banking\AccountFactory
        autowire: false

    Money\MoneyFormatter:
        class: Money\Formatter\DecimalMoneyFormatter

    Money\MoneyParser:
        class: Money\Parser\DecimalMoneyParser

    Money\Currencies:
        class: Money\Currencies\ISOCurrencies

    Mustache_Engine:
        class: Mustache_Engine
        arguments:
            -
                loader: '@Mustache_Loader_FilesystemLoader'
        configurator: ['@workbench\webb\Utils\MustacheConfigurator', 'configureMustache']

    Mustache_Loader_FilesystemLoader:
        class: Mustache_Loader_FilesystemLoader
        arguments: ['templates']
